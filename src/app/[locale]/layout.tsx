import { LayoutTheme } from '@/layouts';
import { SessionProvider } from '@/layouts/SessionProvider';
import { locales } from '@/navigation';
import type { Metadata } from 'next';
import { NextIntlClientProvider } from 'next-intl';
import dynamic from 'next/dynamic';
import { notFound } from 'next/navigation';
import './components.css';
import './globals.css';

const Modals = dynamic(() => import('@/layouts/Modals'));

interface RootLayoutProps {
    children: React.ReactNode;
    modal: React.ReactNode;
    params: { locale: string };
}

export function generateStaticParams() {
    return [{ locale: 'en' }, { locale: 'zh' }, { locale: 'vi' }];
}

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default async function RootLayout({ children, modal, params: { locale } }: RootLayoutProps) {
    let messages;
    // Validate that the incoming `locale` parameter is valid
    const isValidLocale = locales.some(cur => cur === locale);
    if (!isValidLocale) notFound();

    try {
        messages = (await import(`../languages/${locale}.json`)).default;
    } catch (error) {
        notFound();
    }

    return (
        <html lang={locale}>
            <SessionProvider>
                <NextIntlClientProvider locale={locale} messages={messages.default}>
                    <LayoutTheme />
                    <body>
                        {children}
                        <Modals />
                        {modal}
                    </body>
                </NextIntlClientProvider>
            </SessionProvider>
        </html>
    );
}
